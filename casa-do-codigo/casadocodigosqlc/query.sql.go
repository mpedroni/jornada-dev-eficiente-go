// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package casadocodigosqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createAuthor = `-- name: CreateAuthor :one
INSERT INTO authors (name, email, description, created_at) VALUES ($1, $2, $3, $4) RETURNING id
`

type CreateAuthorParams struct {
	Name        string
	Email       string
	Description *string
	CreatedAt   pgtype.Timestamp
}

func (q *Queries) CreateAuthor(ctx context.Context, arg CreateAuthorParams) (int32, error) {
	row := q.db.QueryRow(ctx, createAuthor,
		arg.Name,
		arg.Email,
		arg.Description,
		arg.CreatedAt,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const findAuthorByEmail = `-- name: FindAuthorByEmail :one
SELECT id, name, email, description, created_at FROM authors WHERE email = $1
`

func (q *Queries) FindAuthorByEmail(ctx context.Context, email string) (Author, error) {
	row := q.db.QueryRow(ctx, findAuthorByEmail, email)
	var i Author
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Description,
		&i.CreatedAt,
	)
	return i, err
}
